rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow create: if request.auth != null
                   && request.auth.uid == userId
                   // Ensure all required fields are present and no extra fields are added
                   && request.resource.data.keys().hasAll([
                       'uid',
                       'email',
                       'name',
                       'employeeId',
                       'department',
                       'role',
                       'companyId',
                       'companyName',
                       'joiningDate',
                       'baseSalary',
                       'createdAt'
                   ])
                   && request.resource.data.keys().hasOnly([
                       'uid',
                       'email',
                       'name',
                       'employeeId',
                       'department',
                       'role',
                       'companyId',
                       'companyName',
                       'joiningDate',
                       'baseSalary',
                       'createdAt'
                   ])
                   // Optional basic type/value validation for essential fields
                   && request.resource.data.uid == request.auth.uid
                   && request.resource.data.role is string
                   && request.resource.data.companyId is string;

      allow read: if request.auth != null && request.auth.uid == userId;

      // Deny direct client-side updates/deletes for sensitive fields or roles
      allow update, delete: if false; 
    }

    // Default deny for other collections for security
    match /{document=**} {
      allow read, write: if false;
    }
  }
}